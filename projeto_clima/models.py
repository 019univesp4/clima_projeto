from django.db import models

class Weather(models.Model):
    id = models.AutoField(primary_key=True)  # Auto-incremento
    name = models.CharField(max_length=100)
    state = models.CharField(max_length=2)
    country = models.CharField(max_length=2)
    meteogram = models.TextField()

class WeatherData(models.Model):
    weather = models.ForeignKey(Weather, on_delete=models.CASCADE, related_name='weather_data')  # Chave estrangeira
    date = models.DateField()
    date_br = models.CharField(max_length=10)
    humidity_min = models.IntegerField()
    humidity_max = models.IntegerField()
    humidity_dawn_min = models.IntegerField()
    humidity_dawn_max = models.IntegerField()
    humidity_morning_min = models.IntegerField()
    humidity_morning_max = models.IntegerField()
    humidity_afternoon_min = models.IntegerField()
    humidity_afternoon_max = models.IntegerField()
    humidity_night_min = models.IntegerField()
    humidity_night_max = models.IntegerField()
    pressure = models.FloatField()
    rain_precipitation = models.FloatField()
    rain_probability = models.IntegerField()
    wind_velocity_min = models.IntegerField()
    wind_velocity_max = models.IntegerField()
    wind_velocity_avg = models.IntegerField()
    wind_direction = models.CharField(max_length=10)
    wind_gust_max = models.IntegerField()
    uv_max = models.FloatField()
    thermal_sensation_min = models.IntegerField()
    thermal_sensation_max = models.IntegerField()
    temperature_min = models.IntegerField()
    temperature_max = models.IntegerField()
    temperature_dawn_min = models.IntegerField()
    temperature_dawn_max = models.IntegerField()
    temperature_morning_min = models.IntegerField()
    temperature_morning_max = models.IntegerField()
    temperature_afternoon_min = models.IntegerField()
    temperature_afternoon_max = models.IntegerField()
    temperature_night_min = models.IntegerField()
    temperature_night_max = models.IntegerField()
    cloud_coverage_low = models.IntegerField()
    cloud_coverage_mid = models.IntegerField()
    cloud_coverage_high = models.IntegerField()
    sunrise = models.TimeField()
    sunset = models.TimeField()
